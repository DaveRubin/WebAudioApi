function OscillatorSample(){this.isPlaying=!1,this.canvas=document.querySelector("canvas"),this.WIDTH=640,this.HEIGHT=240}OscillatorSample.prototype.play=function(){this.oscillator=context.createOscillator(),this.analyser=context.createAnalyser(),this.oscillator.connect(this.analyser),this.analyser.connect(context.destination),this.oscillator[this.oscillator.start?"start":"noteOn"](0)},OscillatorSample.prototype.stop=function(){this.oscillator.stop(0)},OscillatorSample.prototype.toggle=function(){this.isPlaying?this.stop():this.play(),this.isPlaying=!this.isPlaying},OscillatorSample.prototype.changeFrequency=function(a){this.oscillator.frequency.value=a},OscillatorSample.prototype.changeDetune=function(a){this.oscillator.detune.value=a},OscillatorSample.prototype.changeType=function(a){this.oscillator.type=a},OscillatorSample.prototype.visualize=function(){this.canvas.width=this.WIDTH,this.canvas.height=this.HEIGHT;var a=this.canvas.getContext("2d"),b=new Uint8Array(this.analyser.frequencyBinCount);this.analyser.getByteTimeDomainData(b);for(var c=0;c<b.length;c++){var d=b[c],e=d/256,f=this.HEIGHT*e,g=this.HEIGHT-f-1,h=this.WIDTH/b.length;a.fillStyle="black",a.fillRect(c*h,g,1,1)}},context=new(window.AudioContext||window.webkitAudioContext);var sample=new OscillatorSample;angular.module("webAudioApiApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch"]).config(["$routeProvider",function(a){a.when("/",{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}).when("/about",{templateUrl:"views/about.html",controller:"AboutCtrl",controllerAs:"about"}).otherwise({redirectTo:"/"})}]),angular.module("webAudioApiApp").controller("MainCtrl",["$scope","AudioContext",function(a,b){a.waveTypes=["square","sine","sawtooth","triangle"];var c=new(window.AudioContext||window.webkitAudioContext),d=c.createOscillator();d.start();var e=c.createBiquadFilter();e.connect(c.destination),a.playing=!1,a.waveType=a.waveTypes[0],a.frequency=100,a.playMode=100,a.filterFrequency=1e3,e.type="lowshelf",e.frequency.value=1e3,e.gain.value=25,a.$watch("filterFrequency",function(a,b){console.log("filterFrequency - "+a),e.frequency.value=a}),a.$watch("waveType",function(a,b){console.log("changed wave to - "+a),d.type=a}),a.$watch("frequency",function(a,b){console.log("changed frequency to - "+a),d.frequency.value=a}),a.$watch("playing",function(a,b){console.log("changed play to - "+a),a?d.connect(e):b&&d.disconnect(e)}),a.playButtonPressed=function(b){a.playing=!a.playing}}]),angular.module("webAudioApiApp").controller("AboutCtrl",function(){this.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}),angular.module("webAudioApiApp").service("AudioContext",function(){new(window.AudioContext||window.webkitAudioContext);this.testFunc=function(){console.log("A")}}),angular.module("webAudioApiApp").run(["$templateCache",function(a){"use strict";a.put("views/about.html","<p>This is the about view.</p>"),a.put("views/main.html",'<h1> Web Audio API Simple demo </h1> <div class="container"> <div class="panel panel-default"> <div class="panel-heading text-center"> אוסילטור </div> <div class="panel-body text-center"> <div> סוג גל <select ng-model="waveType"> <option ng-repeat="wave in waveTypes" value="{{wave}}">{{wave}}</option> </select> </div> <div> <span> {{frequency}}Hz</span> <span> תדר</span> <input type="range" ng-model="frequency" min="440" max="880"> </div> <div> <button ng-click="playButtonPressed()"> {{playing?"Stop":"Play"}} </button> </div> </div> </div> <div class="panel panel-default"> <div class="panel-heading text-center"> פילטר </div> <div class="panel-body"> <input type="range" ng-model="filterFrequency" min="0" max="2000"> </div> </div> </div>')}]);